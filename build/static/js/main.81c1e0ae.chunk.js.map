{"version":3,"sources":["components/HomepageText/HomepageText.js","components/ParticleBackground/images/smalldeer.svg","components/ParticleBackground/ParticleBackground.js","pages/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["HomepageText","className","Button","variant","href","Homepage","id","options","autoplay","background","color","opacity","backgroundMask","composite","cover","enable","backgroundMode","zIndex","detectRetina","fpsLimit","infection","cure","delay","infections","stages","interactivity","detectsOn","events","onClick","mode","onHover","parallax","force","smooth","resize","modes","attract","distance","duration","speed","bounce","bubble","size","connect","links","radius","grab","blink","consent","light","area","gradient","start","value","stop","shadow","length","push","quantity","remove","repulse","slow","factor","trail","quanity","manualParticles","motion","disable","reduce","particles","animation","sync","horizontal","random","minimumValue","vertical","collisions","life","count","lineLinked","frequency","blur","triangle","width","warp","move","angle","offset","rotate","x","y","direction","gravity","acceleration","maxSpeed","noise","outModes","default","bottom","left","right","top","straight","fillColor","vibrate","number","density","value_area","limit","reduceDuplicates","path","shape","character","fill","font","weight","char","polygon","sides","star","type","destroy","startValue","stroke","twinkle","lines","pauseOnBlur","pauseOnOutsideViewPort","themes","draw","lineColor","lineWidth","inlineArrangement","scale","url","polygonImage","Component","App","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81c1e0ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./HomepageText.css\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nfunction HomepageText() {\r\n  return (\r\n    <div className=\"splash-container\">\r\n      <div className=\"row\">\r\n        <div className=\"homeHead col-12\">Hi, I'm Andy.</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"homeSubhead col-12\">I'm a full-stack developer with an extensive background in data visualization and strategic communication.</div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"homeButton\">\r\n          <Button variant=\"secondary\" className=\"textEdit4 col-2\" href=\"/\">\r\n            View My Portfolio\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomepageText;","export default __webpack_public_path__ + \"static/media/smalldeer.67898a0c.svg\";","import Particles from \"react-tsparticles\";\r\nimport React, { Component }  from 'react';\r\nimport polygonImage from \"./images/smalldeer.svg\"\r\nimport pathseg from \"pathseg\"\r\n\r\n// if (process.browser) {\r\n//     require(\"pathseg\");\r\n//   }\r\n \r\nclass Homepage extends Component {\r\n    render() {\r\n        return (\r\n        <>\r\n        {/* <HomepageText /> */}\r\n        <Particles\r\n            className=\"semiTransparent\"\r\n            id=\"tsparticles\"\r\n            options={{\r\n            autoplay: true,\r\n            ////////////////\r\n            // BACKGROUND //\r\n            ////////////////\r\n\r\n            background: {\r\n                color: \"rgb(0,0,0,0.5)\",\r\n                opacity: 1\r\n            },\r\n\r\n            backgroundMask: {\r\n                composite: \"destination-out\",\r\n                cover: {\r\n                    color: \"#fff\",\r\n                    opacity: 1,       \r\n                },\r\n                enable: false\r\n            },\r\n\r\n            backgroundMode: {\r\n                enable: false,\r\n                zIndex: -1,\r\n                \r\n            },\r\n\r\n            detectRetina: false,\r\n            fpsLimit: 30,\r\n\r\n            ///////////////\r\n            // INFECTION //\r\n            ///////////////\r\n\r\n            infection: {\r\n                cure: false,\r\n                delay: 0,\r\n                enable: false,\r\n                infections: 0,\r\n                stages: []\r\n            },\r\n\r\n            ///////////////////\r\n            // INTERACTIVITY //\r\n            ///////////////////\r\n\r\n            interactivity: {\r\n                detectsOn: \"canvas\",\r\n\r\n                events: {\r\n                    onClick: {\r\n                        enable: false,\r\n                        mode: \"push\"\r\n                    },\r\n                    // onDiv: {\r\n                    //     selectors: \"#repulse-div\",\r\n                    //     enable: false,\r\n                    //     mode: \"repulse\",\r\n                    //     type: \"circle\"\r\n                    // },\r\n                    onHover: {\r\n                        enable: true,\r\n                        mode: \"bubble\",\r\n                        parallax: {\r\n                            enable: false,\r\n                            force: 2,\r\n                            smooth: 10\r\n                        }\r\n                    },\r\n                    resize: true,\r\n                },\r\n\r\n                modes: {\r\n                    attract: {\r\n                        distance: 200,\r\n                        duration: 0.4,\r\n                        speed: 1\r\n                    },\r\n                    bounce: {\r\n                        distance: 200\r\n                    },\r\n                    bubble: {\r\n                        distance: 40,\r\n                        duration: 2,\r\n                        opacity: 8,\r\n                        size: 6,\r\n                    },\r\n                    connect: {\r\n                        distance: 80,\r\n                        links: {opacity:0.5},\r\n                        radius: 60\r\n                    },\r\n                    grab: {\r\n                        distance: 400,\r\n                        links: {\r\n                            blink: false,\r\n                            consent: false,\r\n                            opacity: 1\r\n                        }\r\n                    },\r\n                    light: {\r\n                        area: {\r\n                            gradient: {\r\n                                start: {value: \"#ffffff\"},\r\n                                stop: {value: \"#000000\"},\r\n                            },\r\n                            radius: 1000,\r\n                        },\r\n                        shadow: {\r\n                            color: {value: \"#000000\"},\r\n                            length: 2000\r\n                        },                            \r\n                    },\r\n                    push: {\r\n                        quantity: 4,\r\n                    },\r\n                    remove: {\r\n                        quantity: 2\r\n                    },\r\n                    repulse: {\r\n                        distance: 200,\r\n                        duration: 0.4,\r\n                        speed: 1\r\n                    },\r\n                    slow: {\r\n                        factor: 1,\r\n                        radius: 0\r\n                    },\r\n                    trail: {\r\n                        delay: 1,\r\n                        quanity: 1\r\n                    }\r\n                },\r\n            },\r\n\r\n            ////////////\r\n            // MOTION //\r\n            ////////////\r\n\r\n            manualParticles: [],\r\n\r\n            ////////////\r\n            // MOTION //\r\n            ////////////\r\n\r\n            motion: {\r\n                disable: false,\r\n                reduce: {\r\n                    factor: 4,\r\n                    value: false\r\n                }\r\n            },\r\n\r\n            ///////////////\r\n            // PARTICLES //\r\n            ///////////////\r\n\r\n            particles: {\r\n\r\n                // PARTICLE COLOR\r\n                color: {\r\n                    value: \"#ffffff\",\r\n                    animation: {\r\n                        enable: false,\r\n                        speed: 1,\r\n                        sync: true\r\n                    },\r\n                },\r\n                \r\n                // PARTICLE BOUNCE\r\n                bounce: {\r\n                    horizontal: {\r\n                        random: {\r\n                            enable: false,\r\n                            minimumValue: 0.1\r\n                        },\r\n                        value: 1 \r\n                    },\r\n                    vertical: {\r\n                        random: {\r\n                            enable: false,\r\n                            minimumValue: 0.1\r\n                        },\r\n                        value: 1\r\n                    },\r\n                    \r\n                },\r\n                \r\n                // PARTICLE COLLISIONS\r\n                collisions: {\r\n                    bounce: {\r\n                        horizontal: {\r\n                            random: {\r\n                                enable: false,\r\n                                minimumValue: 0.1\r\n                            },\r\n                            value: 1\r\n                        },\r\n                        vertical: {\r\n                            random: {\r\n                                enable: false,\r\n                                minimumValue: 0.1\r\n                            },\r\n                            value: 1\r\n                        },\r\n                    },\r\n                    enable: false,\r\n                    mode: \"bounce\",\r\n                },\r\n                \r\n                // PARTICLE LIFE\r\n                life: {\r\n                    count: 0,\r\n                    delay: {\r\n                        random: {\r\n                            enable: false,\r\n                            minimumValue: 0\r\n                        },\r\n                        value: 0,\r\n                        sync: false\r\n                    },\r\n                    duration: {\r\n                        random: {\r\n                            enable: false,\r\n                            minimumValue: 0.0001\r\n                        },\r\n                        value: 0,\r\n                        sync: false\r\n                    }\r\n                },\r\n                \r\n                // PARTICLE LINKS (LINES)\r\n                lineLinked: {\r\n                    blink: false,\r\n                    color: \"#ffffff\",\r\n                    consent: false,\r\n                    distance: 30,\r\n                    enable: true,\r\n                    frequency: 1,\r\n                    opacity: 0.4,\r\n                    shadow: {\r\n                        blur: 5,\r\n                        color: \"#00ff00\",\r\n                        enable: false\r\n                    },\r\n                    triangle: {\r\n                        enable: false,\r\n                        frequency: 1\r\n                    },\r\n                    width: 1,\r\n                    warp: false\r\n                },\r\n\r\n                // PARTICLE MOVEMENT\r\n                move: {\r\n                    angle: {\r\n                        offset: 45,\r\n                        value: 90\r\n                    },\r\n                    attract: {\r\n                        enable: false,\r\n                        rotate: {\r\n                            x: 600,\r\n                            y: 1200\r\n                        }\r\n                    },\r\n                    direction: \"none\",\r\n                    distance: 0,\r\n                    enable: true,\r\n                    gravity: {\r\n                        acceleration: 9.81,\r\n                        enable: false,\r\n                        maxSpeed: 50\r\n                    },\r\n                    noise: {\r\n                        delay: {\r\n                            random: {\r\n                                enable: false,\r\n                                minimumValue: 0\r\n                            },\r\n                            value: 0\r\n                        },\r\n                        enable: false\r\n                    },\r\n                    outModes: {\r\n                        default: \"bounce\",\r\n                        bottom: \"bounce\",\r\n                        left: \"bounce\",\r\n                        right: \"bounce\",\r\n                        top: \"bounce\"\r\n                    },\r\n                    random: false,\r\n                    size: false,\r\n                    speed: 1,\r\n                    straight: false,\r\n                    trail: {\r\n                        enable: false,\r\n                        length: 10,\r\n                        fillColor: \"#000000\"\r\n                    },\r\n                    vibrate: false,\r\n                    warp: false\r\n                },\r\n\r\n                // NUMBER OF PARTICLES\r\n                number: {\r\n                    density: {\r\n                        enable: false,\r\n                        value_area: 2000,\r\n                        factor: 1000\r\n                    },\r\n                    limit: 0,\r\n                    value: 200\r\n                },\r\n\r\n                // PARTICLE OPACITY\r\n                opacity: {\r\n                    random: {\r\n                        enable: false,\r\n                        minimumValue: 0.1\r\n                    },\r\n                    value: 0.4,\r\n                    animation: {\r\n                        enable: true,\r\n                        minimumValue: 0.05,\r\n                        speed: 2,\r\n                        sync: false\r\n                    },     \r\n                },\r\n\r\n                reduceDuplicates: false,\r\n\r\n                // PARTICLE RORATE\r\n                rotate: {               \r\n                    random: {\r\n                        enable: false,\r\n                        minimumValue: 0,\r\n                    },\r\n                    value: 0,\r\n                    direction: \"clockwise\",\r\n                    animation: {\r\n                        enable: false,\r\n                        speed: 0,\r\n                        sync: false\r\n                    },\r\n                    path: false\r\n                },\r\n\r\n                // PARTICLE SHADOW\r\n                shadow: {\r\n                    blur: 0,\r\n                    color: \"#000000\",\r\n                    enable: false,\r\n                    offset: {\r\n                        x: 0,\r\n                        y: 0\r\n                    }\r\n                },\r\n\r\n                // PARTICLE SHAPE\r\n                shape: {\r\n                    options: {\r\n                        character: {\r\n                            fill: false,\r\n                            font: \"Verdana\",\r\n                            weight: \"400\"\r\n                        },\r\n                        char: {\r\n                            fill: false,\r\n                            font: \"Verdana\",\r\n                            weight: \"400\"\r\n                        },\r\n                        polygon: {\r\n                            sides: 5,\r\n                        },\r\n                        star: {\r\n                            sides:5\r\n                        },\r\n                        // image: {\r\n                        //     height: 100,\r\n                        //     replaceColor: true,\r\n                        //     src: \"https://cdn.matteobruni.it/images/particles/github.svg\",\r\n                        //     width: 100\r\n                        // },\r\n                    },\r\n                    type: \"circle\"\r\n                },\r\n\r\n                // PARTICLE SIZE\r\n                size: {\r\n                    random: {\r\n                        enable: true,\r\n                        minimumValue: 1\r\n                    },\r\n                    value: 1,\r\n                    animation: {\r\n                        destroy: \"none\",\r\n                        enable: false,\r\n                        minimumValue: 0.1,\r\n                        speed: 40,\r\n                        startValue: \"max\",\r\n                        sync: false\r\n                    }\r\n                },\r\n\r\n                // PARTICLE STROKE\r\n                stroke: {\r\n                    width: 0,\r\n                    color: {\r\n                        value: \"#000000\",\r\n                        animation: {\r\n                            enable: false,\r\n                            speed: 1,\r\n                            sync: true\r\n                        }\r\n                    }\r\n                },\r\n\r\n                // PARTICLE TWINKLE\r\n                twinkle: {\r\n                    lines: {\r\n                        enable: false,\r\n                        frequency: 0.05,\r\n                        opacity: 1\r\n                    },\r\n                    particles: {\r\n                        enable: false,\r\n                        frequency: 0.05,\r\n                        opacity: 1\r\n                    }\r\n                },\r\n            },\r\n\r\n            // PAUSE STUFF\r\n            pauseOnBlur: true,\r\n            pauseOnOutsideViewPort: false,\r\n\r\n            // THEMES\r\n            themes: [],\r\n\r\n            polygon: {\r\n                enable: true,\r\n                draw: {\r\n                    enable: true,\r\n                    lineColor: \"rgba(255,255,255,0.2)\",\r\n                    lineWidth: 0.5,\r\n                    // stroke: {\r\n                    //     color: \"rgba(255,255,255,0.2)\",\r\n                    //     width: 0.5,\r\n                    //     opacity: 0.2\r\n                    // }\r\n                },\r\n                inlineArrangement: \"equidistant\",\r\n                move: {\r\n                    radius: 10,\r\n                },\r\n                scale: 0.5,\r\n                type: \"inline\",\r\n                // url: require(\"./images/sphereWireframe.svg\")\r\n                url: polygonImage\r\n            }\r\n        }}\r\n        />\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage\r\n\r\n","import HomepageText from '../components/HomepageText/HomepageText'\r\nimport ParticlesBackground from \"../components/ParticleBackground/ParticleBackground\"\r\n\r\n// import Particles from \"react-tsparticles\";\r\nimport React, { Component }  from 'react';\r\n// import HomepageText from '../components/HomepageText/HomepageText'\r\n\r\nclass Homepage extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <HomepageText/>\r\n                    <ParticlesBackground />\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage\r\n\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Homepage from \"./pages/Homepage\";\n\nfunction App() {\n\n  return(\n    <Router>\n      <div className=\"bg\">\n        <div className=\"container-fluid\">\n          <Route exact path=\"/\" component={Homepage} />\n          <Route exact path=\"/andy-greenhaw-development-portfolio\" component={Homepage} />\n        </div>\n      </div>\n    </Router>\n    )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}